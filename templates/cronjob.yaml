{{- if .Values.cronjob.enabled }}
{{- $_ := set .Values "releaseIdentifier" ( include "django-production-chart.releaseIdentifier" . ) }}
{{- $_ := set .Values "namespaceIdentifier" ( include "django-production-chart.namespaceIdentifier" . ) }}
{{- $_ := set .Values "instanceIdentifier" ( include "django-production-chart.instanceIdentifier" . ) }}
{{- range .Values.cronjob.jobs -}}
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ if and $.Values.namespace $.Values.namespace.enabled }}{{ else }}{{  $.Values.releaseIdentifier }}-cronjob-{{ end }}{{ .name }}
  namespace: {{ $.Values.namespaceIdentifier }}
  labels:
    app.kubernetes.io/name: {{ $.Values.releaseIdentifier }}
    app.kubernetes.io/instance: {{ $.Values.instanceIdentifier }}
{{- include "django-production-chart.resourceLabels" $ | nindent 4 }}
{{- if $.Values.securityPolicy.enabled }}
  annotations:
{{ include "django-production-chart.securityPolicyAnnotations" $.Values.securityPolicy.cronjob | indent 4 }}
{{- end }}
spec:
  schedule: {{ .schedule | quote }}
  concurrencyPolicy: {{ default "Forbid" .concurrencyPolicy | quote }}
  successfulJobsHistoryLimit: {{ default 0 .successfulJobsHistoryLimit }}
  failedJobsHistoryLimit: {{ default 3 .failedJobsHistoryLimit }}
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app: {{ $.Release.Name | quote }}
            cron: {{ .name | quote }}
            app.kubernetes.io/component: cronjob
{{- if $.Values.securityPolicy.enabled }}
          annotations:
{{ include "django-production-chart.securityPolicyAnnotations" $.Values.securityPolicy.cronjob | indent 12 }}
{{- end }}
        spec:
{{- if $.Values.securityPolicy.enabled }}
          securityContext:
{{ include "django-production-chart.securityPolicyContext" $.Values.securityPolicy.cronjob | indent 12 }}
{{- end }}
{{- if .serviceAccountName }}
          serviceAccountName: {{ .serviceAccountName }}
{{- else }}
          automountServiceAccountToken: false
{{- end }}
          restartPolicy: {{ default "OnFailure" .restartPolicy | quote }}
{{ include "django-production-chart.specVolumes" $ | indent 10 }}
{{ include "django-production-chart.specContainers" (dict "root" . "type" "initContainers" "containers" .initContainers) | indent 10 }}
{{- include "django-production-chart.specContainerBase" ( merge ( dict "containerImage" .image "containerName" .name ) $ ) | nindent 10 -}}
{{- include "django-production-chart.specContainerResources" (or .resources $.Values.resources) | nindent 14 -}}
{{- include "django-production-chart.specContainerEnv" $ | nindent 14 -}}
{{- include "django-production-chart.specContainerCommand" (dict "command" .command "args" .args) | nindent 14 -}}
{{- include "django-production-chart.specContainers" (dict "root" $ "containers" .sidecarContainers) | indent 10 -}}
{{ printf "\n" }}
{{- end -}}
{{- end -}}
