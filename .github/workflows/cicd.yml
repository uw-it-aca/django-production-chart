---
name: Build and Test

env:
  TEST_VALUES_PATH: "/uw-it-aca/myuw/main/docker/prod-values.yml"
  TEST_VALUES_HOST: "https://raw.githubusercontent.com"
  HELM_APP_VERSION: "3.4.2"
  KUBEVAL_VERSION: "latest"
  KUBEVAL_SKIP_KINDS: "ExternalSecret,ServiceMonitor"
  KUBEVAL_SCHEMA_LOCATION: "https://raw.githubusercontent.com/yannh/kubernetes-json-schema"
  KUBERNETES_VERSION: "master"
  KUBEVAL_DIR: "kubeval-dist"

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
    types: [opened, reopened, synchronize]

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Set up environment
        shell: bash
        run: |
          MANIFEST_FILE_NAME=test-manifest.yaml
          echo "MANIFEST_FILE_NAME=$MANIFEST_FILE_NAME" >> $GITHUB_ENV

          LOCAL_MANIFEST=${PWD}/$MANIFEST_FILE_NAME
          echo "LOCAL_MANIFEST=$LOCAL_MANIFEST" >> $GITHUB_ENV

          LOCAL_VALUES_FILENAME="prod-values.yml"
          echo "LOCAL_VALUES_FILENAME=$LOCAL_VALUES_FILENAME" >> $GITHUB_ENV

          TEST_HELM_VALUES=${PWD}/${LOCAL_VALUES_FILENAME}
          echo "TEST_HELM_VALUES=$TEST_HELM_VALUES" >> $GITHUB_ENV

      - name: Generate Test Manifest from default values
        shell: bash
        run: >-
          docker run -v ${PWD}:/chart
          alpine/helm:${HELM_APP_VERSION} template test-test /chart
          --set-string "image.tag=007"
          -f /chart/values.yaml > ${LOCAL_MANIFEST}

      - name: Fetch kubeval
        shell: bash
        run: >-
          mkdir -p $KUBEVAL_DIR &&
          cd $KUBEVAL_DIR &&
          wget https://github.com/instrumenta/kubeval/releases/${KUBEVAL_VERSION}/download/kubeval-linux-amd64.tar.gz &&
          tar xzf kubeval-linux-amd64.tar.gz

      - name: Validate Manifest
        shell: bash
        run: >-
          ./${KUBEVAL_DIR}/kubeval ${PWD}/${MANIFEST_FILE_NAME}
          --schema-location "${KUBEVAL_SCHEMA_LOCATION}/${KUBERNETES_VERSION}"
          --strict
          --skip-kinds "${KUBEVAL_SKIP_KINDS}"

      - name: Fetch test helm values
        shell: bash
        run: >-
          curl -s ${TEST_VALUES_HOST}${TEST_VALUES_PATH} > $TEST_HELM_VALUES

      - name: Generate manifest from test helm values
        shell: bash
        run: >-
          docker run -v ${PWD}:/chart
          alpine/helm:${HELM_APP_VERSION} template test-test /chart
          --set-string "image.tag=007"
          -f /chart/${LOCAL_VALUES_FILENAME} > ${LOCAL_MANIFEST}

      - name: Validate Manifest from test helm values
        shell: bash
        run: >-
          ./${KUBEVAL_DIR}/kubeval ${PWD}/${MANIFEST_FILE_NAME}
          --schema-location "${KUBEVAL_SCHEMA_LOCATION}/${KUBERNETES_VERSION}"
          --strict
          --skip-kinds "${KUBEVAL_SKIP_KINDS}"
