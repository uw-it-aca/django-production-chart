{{- if and .Values.cronjob.enabled .Values.metrics.enabled }}
{{- $_ := set .Values "releaseIdentifier" ( include "django-production-chart.releaseIdentifier" . ) -}}
{{- $_ := set .Values "namespaceIdentifier" ( include "django-production-chart.namespaceIdentifier" . ) -}}
{{- $name := printf "%s-pushgateway" $.Values.releaseIdentifier -}}
{{- if and .Values.namespace .Values.namespace.enabled -}}
{{- $name = "pushgateway" -}}
{{- end -}}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ $name }}
  namespace: {{ .Values.namespaceIdentifier }}
  labels:
    app.kubernetes.io/name: {{ $name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: pushgateway
{{- include "django-production-chart.resourceLabels" . | nindent 4 }}
{{- if .Values.serviceAnnotations -}}
  annotations:
{{ toYaml .Values.serviceAnnotations | indent 4 }}
{{- end }}
spec:
  clusterIP: None
  ports:
    - name: metrics
      port: 9091
      targetPort: metrics
  selector:
    app.kubernetes.io/name: {{ $name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: {{ $name }}
  namespace: {{ .Values.namespaceIdentifier }}
  labels:
    app.kubernetes.io/name: {{ $name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: pushgateway
{{- include "django-production-chart.resourceLabels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ $name }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  endpoints:
    - port: metrics
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $name }}
  namespace: {{ .Values.namespaceIdentifier }}
  labels:
    app.kubernetes.io/name: {{ $name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: pushgateway
{{- include "django-production-chart.resourceLabels" . | nindent 4 }}
{{- if .Values.securityPolicy.enabled }}
  annotations:
{{- include "django-production-chart.securityPolicyAnnotations" .Values.securityPolicy.pushgateway | indent 4 }}
{{- end }}
spec:
  replicas: {{ default 1 .Values.metrics.pushgateway.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ $name }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ $name }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: pushgateway
{{- include "django-production-chart.resourceLabels" . | nindent 8 }}
{{- if .Values.securityPolicy.enabled }}
      annotations:
        seccomp.security.alpha.kubernetes.io/pod: "runtime/default"
{{- end }}
    spec:
{{- if .Values.securityPolicy.enabled }}
      automountServiceAccountToken: false
{{- end }}
{{- if .Values.securityPolicy.enabled }}
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
        fsGroup: 65534
{{- end }}
      containers:
        - name: {{ $name }}
          image: "prom/pushgateway:v1.2.0"
          imagePullPolicy: Always
{{- if .Values.securityPolicy.enabled }}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
{{- end }}
          resources:
            limits:
              cpu: 500m
              memory: 64Mi
            requests:
              cpu: 150m
              memory: 16Mi
          ports:
            - name: metrics
              containerPort: 9091
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /-/healthy
              port: 9091
            initialDelaySeconds: 10
            timeoutSeconds: 10
          readinessProbe:
            httpGet:
              path: /-/ready
              port: 9091
            initialDelaySeconds: 10
            timeoutSeconds: 10
{{- end }}
