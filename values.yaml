# Default values for django-production-chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 2

minReplicas: 5
maxReplicas: 75

targetAverageUtilization: 100

repo: "prereq"

nameOverride: ""
fullnameOverride: ""

branch: "master"

containerPort: 8000

service:
  enabled: true
  ports:
    - port: 80
      targetPort: http
      name: http

deployment:
  enabled: true

deploymentInitialization:
  enabled: true

image:
  repository: "acait/django-contianer"
  tag: "develop"

# baseline security policy for various components
securityPolicy:
  enabled: false
  deploy:
    skipCheck:
      - "CKV_K8S_22=Readonly root file system too restictive"
      - "CKV_K8S_31=Seccomp default breaks HPA metrics api queries"
      - "CKV_K8S_40=Django-container base sets uid 1000"
  deployment:
    skipCheck:
      - "CKV_K8S_8=Liveness probe more trouble than it's worth"
      - "CKV_K8S_22=Readonly root file system too restictive"
      - "CKV_K8S_31=Seccomp default breaks HPA metrics api queries"
      - "CKV_K8S_40=acait uid 1000"
    spec:
      automountServiceAccountToken: false
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
  daemon:
    skipCheck:
      - "CKV_K8S_8=Liveness not relevant in this context"
      - "CKV_K8S_9=Management command presumes initialized app"
      - "CKV_K8S_22=Readonly root file system too restictive"
      - "CKV_K8S_31=Seccomp default breaks HPA metrics api queries"
      - "CKV_K8S_40=acait uid 1000"
    spec:
      automountServiceAccountToken: false
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
  cronjob:
    skipCheck:
      - "CKV_K8S_8=Liveness not relevant in this context"
      - "CKV_K8S_22=Readonly root file system too restictive"
      - "CKV_K8S_31=Seccomp default apears to break HPA metrics api"
      - "CKV_K8S_40=acait uid 1000"
    template:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
  containerBase:
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
          - ALL

autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 5

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  path: /
  tls: {}
  type: nginx
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

database:
  engine: "mysql"

externalService:
  enabled: false

cronjob:
  enabled: false
## example cronjob definition
#  enabled: true
#  jobs:
#    - name: periodic-task
#      schedule: "5 8 * * 1-5"
#      command: ["/scripts/management_command.sh"]
#      args: ["periodic_task"]
## optional specific resources
#      resources:
#        limits:
#          cpu: 750m
#          memory: 1024Mi
#        requests:
#          cpu: 25m
#          memory: 256Mi

## more efficient for shorter jobs and more complete monitoring
daemon:
  enabled: false
## example daemon definition
#  enabled: true
#  daemons:
#    - name: notify-users
#      command: ["/scripts/management_daemon.sh"]
## command can run on a delay seconds interval
#      args: ['--delay', 15, 'notify_users']
## or following a cron specification
#      args: ['--cron', '*/5 * * * *', 'notify_users']
## optional specific resources
#      resources:
#        limits:
#          cpu: 750m
#          memory: 1024Mi
#        requests:
#          cpu: 25m
#          memory: 256Mi

memcached:
  enabled: false
  image: memcached:1.6.9
  replicaCount: 1
  updateStrategy:
    type: RollingUpdate
# override default command, which is:
#  command:
#   - memcached
#   - -m
#   - 64
#   - -o
#   - modern
#   - -v
# override defaults, which are:
#  resources:
#    requests:
#      memory: 64Mi
#      cpu: 50m
## optionally layer mcrouter for scaling if necessary
  mcrouter:
    enabled: false
    controller: "daemonset"
    params:
      port:  5000
    daemonsetParams:
      hostPort: 5000
    statefulsetParams:
      replicas: 1
      antiAffinity: "hard"

certs:
  mounted: false

gcsCredentials:
  mounted: false

mountedSecrets:
  enabled: false
##
## enabling will project all the secrets in secretName as files named by
## the secret's key
##
#  enabled: true
#  secretName: "my-app-data"
##
## optional: override mountPath default with, say, "/app/secrets"
##
#  mountPath: "/data"
##
## optional: use items list to pluck specific secrets by key and specify
## the projected secret's filename in the mountPath directory
##
#  items:
#   - key: "accounts"
#     path: "accounts.csv"

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 25m
    memory: 256Mi

metrics:
  enabled: true
  serviceMonitor:
    enabled: true
  pushgateway:
    enabled: true
    replicaCount: 1

readiness:
  enabled: false
## optionally define command, httpGet, tcpSocket
## default is command below
#  command:
#    - "/scripts/ready.sh"
## alternatives must define/provide endpoint
#  httpGet:
#    path: /readiness
#    port: "8080"
#  tcpSocket:
#    port: "5050"
## optionally override delay and period
#  initialDelay: "5"
#  period: "5"

lifecycle:
  enabled: true
  preStop:
    enabled: true
    command: ["/bin/sh","-c", "if [ -x /scripts/prestop.sh ] ; then /scripts/prestop.sh; else /bin/sleep 20; fi"]

environmentVariables:
  - name: "ENV"
    value: "dev"

certs:
  mounted: False

externalSecrets:
  enabled: false
  secrets:
    - name: test.app.uw.edu-secrets
      externalKey: team/app/test/secrets
      data:
        - name: secret-one
          property: bar
        - name: secret-too
          property: mumble


nodeSelector: {}

tolerations: []

affinity: {}
## set directly, or use shortcut below to schedule pods across nodes
#affinity:
#   podsSpanNodes: true
