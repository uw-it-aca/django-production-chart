{{- if .Values.memcached.enabled }}
{{- $command := .Values.memcached.command | default (list "memcached" "-m" "64" "-o" "modern" "-v") -}}
{{- $extraArgs := .Values.memcached.extraArgs | default "" -}}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ printf "%s-memcached" ( include "django-production-chart.releaseIdentifier" . ) }}
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: {{ include "django-production-chart.releaseIdentifier" . }}
    helm.sh/chart: {{ include "django-production-chart.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
{{- if .Values.serviceAnnotations -}}
  annotations:
{{ toYaml .Values.serviceAnnotations | indent 4 }}
{{- end }}
spec:
  clusterIP: None
  ports:
  - name: memcache
    port: 11211
    targetPort: memcache
{{- if and .Values.metrics.enabled .Values.metrics.serviceMonitor.enabled }}
  - name: metrics
    port: 9150
    targetPort: metrics
{{- end }}
  selector:
    app.kubernetes.io/name: {{ printf "%s-memcached" ( include "django-production-chart.releaseIdentifier" . ) }}
{{- if and .Values.metrics.enabled .Values.metrics.serviceMonitor.enabled }}
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: {{ printf "%s-memcached" ( include "django-production-chart.releaseIdentifier" . ) }}
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: {{ include "django-production-chart.releaseIdentifier" . }}
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    helm.sh/chart: {{ include "django-production-chart.chart" . }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "django-production-chart.releaseIdentifier" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  endpoints:
  - port: metrics
{{- end }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ printf "%s-memcached" ( include "django-production-chart.releaseIdentifier" . ) }}
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: {{ include "django-production-chart.releaseIdentifier" . }}
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    helm.sh/chart: {{ include "django-production-chart.chart" . }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ printf "%s-memcached" ( include "django-production-chart.releaseIdentifier" . ) }}
      app.kubernetes.io/instance: {{ .Release.Name | quote }}
  serviceName: {{ printf "%s-memcached" ( include "django-production-chart.releaseIdentifier" . ) }}
  replicas: {{ .Values.memcached.replicaCount }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ printf "%s-memcached" ( include "django-production-chart.releaseIdentifier" . ) }}
        app.kubernetes.io/instance: {{ .Release.Name | quote }}
{{- with .Values.podLabels }}
{{ toYaml . | indent 8 }}
{{- end}}
{{- with .Values.podAnnotations }}
      annotations:
{{ toYaml . | indent 8 }}
{{- end }}
    spec:
      containers:
      - name: {{ printf "%s-memcached" ( include "django-production-chart.releaseIdentifier" . ) }}
        image: {{ default "memcached:1.5.21" .Values.memcached.image | quote }}
        imagePullPolicy: {{ default "" .Values.imagePullPolicy | quote }}
{{ include "django-production-chart.specContainerCommand" (dict "command" $command "args" $extraArgs) | indent 8}}
        ports:
        - name: memcache
          containerPort: 11211
        readinessProbe:
          tcpSocket:
            port: memcache
          initialDelaySeconds: 5
          timeoutSeconds: 1
        resources:
{{ toYaml .Values.memcached.resources | indent 10 }}
{{- if .Values.metrics.enabled }}
      - name: metrics
        image: "prom/memcached-exporter:latest"
        imagePullPolicy: {{ default "" .Values.metrics.imagePullPolicy | quote }}
        ports:
        - name: metrics
          containerPort: 9150
        resources:
{{ toYaml .Values.metrics.resources | indent 10 }}
{{- end }}
{{- with .Values.extraContainers }}
{{ tpl . $ | indent 6 }}
{{- end }}
{{- with .Values.extraVolumes }}
      volumes:
{{ tpl . $ | indent 6 }}
{{- end }}
{{- with .Values.memcached.nodeSelector }}
      nodeSelector:
{{ toYaml . | trim | indent 8}}
{{- end }}
{{- with .Values.memcached.tolerations }}
      tolerations:
{{ toYaml . | trim | indent 8}}
{{- end }}
{{- with .Values.memcached.affinity }}
      affinity:
{{ toYaml . | trim | indent 8}}
{{- end }}
  updateStrategy:
    type: {{ .Values.memcached.updateStrategy.type }}
    {{- if (eq "Recreate" .Values.memcached.updateStrategy.type) }}
    rollingUpdate: null
    {{- end }}
{{- end -}}
