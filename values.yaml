# Default values for django-production-chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 2

minReplicas: 5
maxReplicas: 75

targetAverageUtilization: 50

repo: "prereq"

nameOverride: ""
fullnameOverride: ""

branch: "master"

service:
  type: ClusterIP
  port: 80

image:
  repository: "acait/django-contianer"
  tag: "develop"


autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 5

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  path: /
  tls: {}
  type: nginx
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

database:
  engine: "mysql"

externalService:
  enabled: false

cronjob:
  enabled: false

memcached:
  enabled: false
  replicaCount: 1
  updateStrategy:
    type: RollingUpdate
# override default command, which is:
#  command:
#   - memcached
#   - -m
#   - 64
#   - -o
#   - modern
#   - -v
# override defaults, which are:
#  resources:
#    requests:
#      memory: 64Mi
#      cpu: 50m


certs:
  mounted: false

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: 500m
    memory: 1024Mi
  requests:
    cpu: 100m
    memory: 256Mi

metrics:
  enabled: false
  serviceMonitor:
    enabled: false

readiness:
  enabled: false
## optionally define command, httpGet, tcpSocket
## default is command below
#  command:
#    - "/scripts/ready.sh"
## alternatives must define/provide endpoint
#  httpGet:
#    path: /readiness
#    port: "8080"
#  tcpSocket:
#    port: "5050"
## optionally override delay and period
#  initialDelay: "5"
#  period: "5"

environmentVariables:
  - name: "ENV"
    value: "dev"
  - name: "PORT"
    value: "8080"

certs:
  mounted: False

nodeSelector: {}

tolerations: []

affinity: {}
